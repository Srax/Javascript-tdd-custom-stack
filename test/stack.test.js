const Stack = require("../stack")

describe('My Stack', () => {
  let stack;

  beforeEach(() => {
    stack = new Stack();
  });

  it('is created empty', () => {
    expect(stack.top).toBe(-1);
    expect(stack.items).toEqual({});
  });

  it('can get length', () => {
    stack.push('ğŸŒ½');
    stack.push('ğŸ¥‘');
    expect(stack.top).toBe(1);
    expect(stack.length).toBe(2);
  });

  it('can get peek', () => {
    stack.push('ğŸŒ½');
    expect(stack.peek).toBe('ğŸŒ½');
  });

  it('can push to the top', () => {
    stack.push('ğŸ¥‘');
    expect(stack.top).toBe(0);
    expect(stack.peek).toBe('ğŸ¥‘');

    stack.push('ğŸŒ½');
    expect(stack.top).toBe(1);
    expect(stack.peek).toBe('ğŸŒ½');
  });

  it('can pop off', () => {
    stack.push('ğŸŒ½');
    stack.push('ğŸ¥‘');
    let popped = stack.pop();
    expect(stack.top).toBe(0);
    expect(popped).toBe("ğŸ¥‘");
    expect(stack.length).toBe(1);
    expect(stack.peek).toBe('ğŸŒ½');
  });
  it('can shift off', () => {
    stack.push('ğŸŒ½');
    stack.push('ğŸ¥‘');
    let shifted = stack.shift();
    expect(stack.top).toBe(0);
    expect(shifted).toBe("ğŸŒ½");
    expect(stack.length).toBe(1);
    expect(stack.peek).toBe('ğŸ¥‘');
  });
});
